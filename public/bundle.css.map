{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\Sidebar.html",
    "..\\src\\App.html"
  ],
  "sourcesContent": [
    "<div ref:container class=\"scanex-sidebar\">\r\n    <ul ref:tabs class=\"tabs\">\r\n        {#each tabs as t, i}\r\n            <li on:click=\"toggle(active, visible, i)\">\r\n                <i class=\"{active === i ? t.active : t.normal}\"></i>\r\n            </li>\r\n        {/each}\r\n    </ul>\r\n    <ul ref:panes class=\"panes\">\r\n        {#each tabs as t, i}\r\n            <li class=\"{visible && active === i ? 'shown' : 'hidden'}\">{content}</li>\r\n        {/each}\r\n    </ul>\r\n</div>\r\n\r\n<style>\r\n    .scanex-sidebar {\r\n        display: inline-block;\r\n        vertical-align: top;\r\n        height: inherit;\r\n    }\r\n    .scanex-sidebar .tabs,\r\n    .scanex-sidebar .panes {        \r\n        vertical-align: top;\r\n        display: inline-block;\r\n        height: inherit;\r\n    }\r\n    .scanex-sidebar .tabs li {\r\n        text-align: center;\r\n        cursor: pointer;       \r\n    }    \r\n</style>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                tabs: [],\r\n                active: -1,\r\n                visible: false,\r\n            };\r\n        },        \r\n        methods: {\r\n            toggle (active, visible, i) {\r\n                if (active === i) {\r\n                    let show = !visible;                    \r\n                    this.set({active: show ? active : -1, visible: show});\r\n                }\r\n                else {\r\n                    this.set({active: i, visible: true});\r\n                }                \r\n            },\r\n            panes () {\r\n                const ps = this.refs.panes.children;\r\n                let panes = [];\r\n                for (let i = 0; i < ps.length; ++i) {\r\n                    panes.push(ps[i]);\r\n                }\r\n                return panes;\r\n            },\r\n            addPane ({active, normal, content}) {\r\n\r\n            }\r\n        }\r\n    };\r\n</script>",
    "<Sidebar id=\"sidebar\" ref:sidebar />\n<div class=\"content\">Map</div>\n\n<style>\n\t#sidebar {\n\t\tposition: absolute;\n\t\tz-index: 100px;\n\t}\n\t.content {\n\t\tbackground-color: beige;\t\t\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t\tleft: 100px;\n\t}\t\n</style>\n\n<script>\n\timport Sidebar from './Sidebar.html';\n\n\n\texport default {\t\t\n\t\toncreate () {\n\n\t\t\t\n\t\t\t\n\t\t\tconst tabs = [\n\t\t\t\t{active: 'fas fa-layer-group active', normal: 'fas fa-layer-group normal', content: 'Layers'},\n\t\t\t\t{active: 'fas fa-bolt active', normal: 'fas fa-bolt normal', content: 'Weather'},\n\t\t\t\t{active: 'fas fa-cogs active', normal: 'fas fa-cogs normal', content: 'Services'},\n\t\t\t];\n\t\t\tconst sidebar = this.refs.sidebar;\n\t\t\tsidebar.set({tabs});\n\t\t\tconst panes = sidebar.panes();\n\t\t\tfor (let i = 0; i < panes.length; ++i) {\n\t\t\t\tpanes[i].innerHTML = `<span>${tabs[i].content}</span>`;\n\t\t\t}\n\n\t\t\tsidebar.on('state', state => {\n\t\t\t\tconsole.log(state);\n\t\t\t});\n\n\t\t},\n\t\tcomponents: {\n\t\t\tSidebar\n\t\t},\n\t\tmethods: {\n\t\t\n\t\t}\n\t};\t\n</script>"
  ],
  "names": [],
  "mappings": "AAgBI,eAAe,eAAC,CAAC,AACb,OAAO,CAAE,YAAY,CACrB,cAAc,CAAE,GAAG,CACnB,MAAM,CAAE,OAAO,AACnB,CAAC,AACD,8BAAe,CAAC,oBAAK,CACrB,8BAAe,CAAC,MAAM,eAAC,CAAC,AACpB,cAAc,CAAE,GAAG,CACnB,OAAO,CAAE,YAAY,CACrB,MAAM,CAAE,OAAO,AACnB,CAAC,AACD,8BAAe,CAAC,KAAK,CAAC,EAAE,eAAC,CAAC,AACtB,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,OAAO,AACnB,CAAC;ACtBJ,QAAQ,cAAC,CAAC,AACT,gBAAgB,CAAE,KAAK,CACvB,OAAO,CAAE,YAAY,CACrB,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,KAAK,AACZ,CAAC"
}